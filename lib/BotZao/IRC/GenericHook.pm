# This plugin is loaded into the Bot-IRC infrastructure to allow "generic"
# plugins to run. What it does is basically:
# 1. register a catch-all hook
# 2. run through all generic plugins enabled by the user
# 2.1. check if text matches the trigger condition
# 2.2.1 in case it matches, execute the plugin and stop the loop
# 2.2.2 otherwise, continue to the next plugin
# 3. return control to Bot-IRC

package BotZao::IRC::GenericHook;

use v5.20;
use warnings;
use strict;
use utf8;

use feature qw(signatures);
no warnings qw(experimental::signatures);

use Bot::IRC;

use BotZao::Commands;
use BotZao::Log qw(log_debug log_info log_error);
use BotZao::Plugins::Core;

my $cmd_prefix = BotZao::Commands::prefix();
my @generic_plugins;

sub init(@args) {
	my $bot = shift @args;

	# Catch-all command (!.*) hook.
	# We have a single command prefix for now.
	$bot->hook(
		{
			to_me => 0,
			text => qr/(?<command>${cmd_prefix}.*)/,
		},
		sub {
			# Bot-IRC passes to the hook sub the bot instance, the information
			# about who sent the message and the message itself.
			my ( $bot, $in, $m ) = @_;

			log_debug("IRC:GenericHook: event: $m->{command} generated by $in->{nick}");

			foreach my $plugin (@generic_plugins) {
				# Check for matching generic plugin trigger text
				next unless ($m->{command} =~ /$plugin->{trigger}/);
				log_debug("IRC:GenericHook:$plugin->{name}: triggered");

				# call plugin's "run" function
				my @ret = @{ $plugin->{run}->($in->{nick}) };
				if (@ret) {
					# messages to be sent to the channel
					$bot->reply("" . $_) foreach @ret;
					return;
				}
				# there might be cases where the plugin triggered only perform
				# server-side actions.
				log_info("IRC:GenericHook:$plugin->{name}: no messages to be sent back");
				return;
			}
			log_info('IRC:GenericHook: no plugin triggered');
		},
	);
	return;
}

# Load all generic plugins found in the config file to the array that we're
# going to walkthrough later.
sub load($plugins) {
	log_debug('IRC:GenericHook: load ' . $_->{name}) foreach @$plugins;
	@generic_plugins = @$plugins;
}

1;
